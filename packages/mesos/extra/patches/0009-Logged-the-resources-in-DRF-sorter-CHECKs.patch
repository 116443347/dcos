From 4c74330cff4319fe938cfa46211fe2752a98c83d Mon Sep 17 00:00:00 2001
From: Zhitao Li <zhitaoli.cs@gmail.com>
Date: Thu, 26 Oct 2017 12:03:47 -0700
Subject: [PATCH] Logged the resources in DRF sorter CHECKs.

If calls to these checks fail, log related resources objects which
caused the failure.

Review: https://reviews.apache.org/r/63332/
(cherry picked from commit f26ffcee0a359a644968feca1ec91243401f589a)
---
 src/master/allocator/sorter/drf/sorter.hpp | 17 +++++++++++++----
 1 file changed, 13 insertions(+), 4 deletions(-)

diff --git a/src/master/allocator/sorter/drf/sorter.hpp b/src/master/allocator/sorter/drf/sorter.hpp
index d10f34824..fea4b779f 100644
--- a/src/master/allocator/sorter/drf/sorter.hpp
+++ b/src/master/allocator/sorter/drf/sorter.hpp
@@ -348,7 +348,9 @@ struct DRFSorter::Node
     void subtract(const SlaveID& slaveId, const Resources& toRemove)
     {
       CHECK(resources.contains(slaveId));
-      CHECK(resources.at(slaveId).contains(toRemove));
+      CHECK(resources.at(slaveId).contains(toRemove))
+        << "Resources " << resources.at(slaveId) << " at agent " << slaveId
+        << " does not contain " << toRemove;
 
       resources[slaveId] -= toRemove;
 
@@ -366,7 +368,9 @@ struct DRFSorter::Node
         totals[resource.name()] -= resource.scalar();
       }
 
-      CHECK(scalarQuantities.contains(quantitiesToRemove));
+      CHECK(scalarQuantities.contains(quantitiesToRemove))
+        << scalarQuantities << " does not contain " << quantitiesToRemove;
+
       scalarQuantities -= quantitiesToRemove;
 
       if (resources[slaveId].empty()) {
@@ -384,8 +388,13 @@ struct DRFSorter::Node
       const Resources newAllocationQuantity =
         newAllocation.createStrippedScalarQuantity();
 
-      CHECK(resources[slaveId].contains(oldAllocation));
-      CHECK(scalarQuantities.contains(oldAllocationQuantity));
+      CHECK(resources.contains(slaveId));
+      CHECK(resources[slaveId].contains(oldAllocation))
+        << "Resources " << resources[slaveId] << " at agent " << slaveId
+        << " does not contain " << oldAllocation;
+
+      CHECK(scalarQuantities.contains(oldAllocationQuantity))
+        << scalarQuantities << " does not contain " << oldAllocationQuantity;
 
       resources[slaveId] -= oldAllocation;
       resources[slaveId] += newAllocation;
-- 
2.14.3

